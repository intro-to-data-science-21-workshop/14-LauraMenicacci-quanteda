available_uk<- mp_corpus(countryname == "United Kingdom") #function to download docs from manifesto project, we chose last manifestos in UK & date == "201912"
available_uk<- mp_corpus(countryname == "United Kingdom" & date == "201912") #function to download docs from manifesto project, we chose last manifestos in UK
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(quanteda)
library(quanteda.textstats)
library(readtext) #readtext package to read in different types of text data
library(manifestoR)
mp_setapikey(key.file = "manifesto_apikey.txt")
available_uk<- mp_corpus(countryname == "United Kingdom") #function to download docs from manifesto project, we chose last manifestos in UK
available_uk #we have 10 docs
names(available_uk)
manifesto_corpus <- available_uk %>%
as.data.frame(with.meta = TRUE) %>%
corpus(docid_field = "manifesto_id", unique_docnames = FALSE) %>%
#docvars(field = "cmp_code") %>%
corpus() ## quanteda's corpus function: Creates a corpus object from available sources
manifesto_corpus
manifesto_corpus %>%
docvars() %>%
names() #meta data information
scotland_corpus <- manifesto_corpus %>%
corpus_subset(party == "51902") %>%
as.character()
tokenized_manifesto <- scotland_corpus %>%
tokens()
tokenized_manifesto %>%
tokens(remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_remove(stopwords("english")) %>%
tokens_wordstem()
manifesto_dfm <- tokenized_manifesto %>%
dfm()
manifesto_dfm %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
#dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") #%>%
View(manifesto_dfm)
View(manifesto_dfm)
manifesto_dfm %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
#dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") #%>%
manifesto_dfm
tokenized_manifesto
quanteda_irish <- mp_corpus(countryname == "Ireland" & date == 201602) %>%
recode_v5_to_v4() %>%
as.data.frame(with.meta = TRUE) %>%
corpus(docid_field = "manifesto_id", unique_docnames = FALSE) %>%
tokens(remove_punct = TRUE) %>%
tokens_tolower() %>%
tokens_remove(stopwords("english")) %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") %>%
dfm_subset(cmp_code %in% c("501", "502", "301", "411"))
feature_frequencies_categories <- quanteda_irish %>% textstat_frequency(n = 10, group = cmp_code)
feature_frequencies_categories %>%
mutate(cmp_code = factor(group, labels = c("Decentralisation", "Technology & Infrastructure", "Environmental Protection", "Culture"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") #%>%
scotland_corpus <- manifesto_corpus %>%
corpus_subset(party == "51902")
tokenized_manifesto <- scotland_corpus %>%
tokens()
tokenized_manifesto %>%
tokens(remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_remove(stopwords("english")) %>%
tokens_wordstem()
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") #%>%
manifesto_dfm
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") #%>%
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 10, group = cmp_code)
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism"))) %>%
ggplot(aes(x = reorder(feature), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
feature_frequencies_cat
View(feature_frequencies_cat)
View(feature_frequencies_categories)
tokenized_manifesto <- scotland_corpus %>%
tokens() %>%
tokens(remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_remove(stopwords("english")) %>%
tokens_wordstem()
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") #%>%
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 10, group = cmp_code)
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") %>%
dfm_subset(cmp_code %in% c("301", "108"))
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 10, group = cmp_code)
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 15, group = cmp_code)
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") %>%
dfm_subset(cmp_code %in% c("301", "110", "108" ))
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 15, group = cmp_code)
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism", "European Union: Negative"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 10, group = cmp_code)
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism", "European Union: Negative"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
#ANCORA NON FATTO
manifesto_corpus %>%
tokens() %>%
kwic(phrase("arms"), window = 10) %>%
DT::datatable(caption = "Keywords in context", rownames = FALSE, options = list(scrollX = TRUE, pageLength = 5, lengthMenu = c(5, 10, 15, 20)))
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism", "European Union: Negative"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
#ANCORA NON FATTO
manifesto_corpus %>%
tokens() %>%
kwic(phrase("brexit"), window = 10) %>%
DT::datatable(caption = "Keywords in context", rownames = FALSE, options = list(scrollX = TRUE, pageLength = 5, lengthMenu = c(5, 10, 15, 20)))
scotland_corpus %>%
tokens() %>%
kwic(phrase("brexit"), window = 10) %>%
DT::datatable(caption = "Keywords in context", rownames = FALSE, options = list(scrollX = TRUE, pageLength = 5, lengthMenu = c(5, 10, 15, 20)))
brexit_tokens <- tokens(scotland_corpus) %>%
tokens_select("Brexit", selection = "keep", window = 10, padding = FALSE, verbose = TRUE)
brexit_dfm <- dfm(brexit_tokens) %>%
dfm_lookup(data_dictionary_LSD2015[1:2])
brexit_dfm
brexit_tokens
brexit_tokens <- scotland_corpus %>%
tokens() %>%
tokens_select("Brexit", selection = "keep", window = 10, padding = FALSE, verbose = TRUE)
brexit_tokens
brexit_tokens <- scotland_corpus %>%
tokens()
brexit_tokens
View(brexit_tokens)
brexit_dfm <- brexit_tokens %>%
dfm() %>%
dfm_lookup(data_dictionary_LSD2015[1:2])
brexit_dfm
brexit_dfm <- brexit_tokens %>%
dfm() %>%
dfm_lookup(data_dictionary_LSD2015[1:2]) %>%
head(20)
brexit_dfm <- brexit_tokens %>%
dfm() %>%
dfm_lookup(data_dictionary_LSD2015[1:2])
brexit_dfm %>%
head(20)
brexit_dfm <- brexit_tokens %>%
dfm() %>%
dfm_lookup(data_dictionary_LSD2015[1:2])
brexit_dfm
View(brexit_dfm)
View(brexit_dfm)
brexit_dfm
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism", "European Union: Negative"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, scales = "free") +
coord_flip()
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism", "European Union: Negative"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
coord_flip()
brexit_dfm %>%
ggplot(aes(x = reorder(features), y = docs, fill = x)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "frequency of positive and negative") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "Federalism", "European Union: Negative"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
brexit_dfm %>%
textstat_frequency(n = 10) %>%
ggplot(aes(x = reorder(features), y = docs, fill = x)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "frequency of positive and negative") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
brexit_dfm %>%
textstat_frequency(n = 10) %>%
ggplot(aes(x = reorder(features), y = docs, fill = x)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "frequency of positive and negative") +
#facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
brexit_dfm %>%
textstat_frequency(n = 10) %>%
ggplot(aes(x = reorder(x), y = features)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "frequency of positive and negative") +
#facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
brexit_dfm %>%
textstat_frequency(n = 10) %>%
ggplot(aes(x = reorder(X), y = features)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "frequency of positive and negative") +
#facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
prova <- brexit_dfm %>%
textstat_frequency(n = 10)
View(prova)
brexit_dfm
polarity(data_dictionary_LSD2015) <-
list(pos = c("positive", "neg_negative"), neg = c("negative", "neg_positive"))
sent_scot <- scotland_corpus %>%
textstat_polarity(data_dictionary_LSD2015)
install.packages("quanteda.sentiment")
library(quanteda.sentiment)
?version
updateR()
library(installr)
install.packages("installr")
library(installr)
updateR()
install.packages("quanteda.sentiment")
polarity <- data_dictionary_LSD2015) %>%
polarity <- data_dictionary_LSD2015 %>%
list(pos = c("positive", "neg_negative"), neg = c("negative", "neg_positive"))
sent_scot <- scotland_corpus %>%
textstat_polarity(data_dictionary_LSD2015)
brexit_dfm
brexit_dfm <- brexit_tokens %>%
dfm() %>%
dfm_lookup(data_dictionary_LSD2015)
brexit_dfm
brexit_dfm %>%
dfm_group(date)

uk_election_programmes <- mp_corpus(countryname == "United Kingdom")
uk_election_programmes #71 docs
path_data <- system.file("extdata/", package = "readtext")
dat_inaug <- read.csv(paste0(path_data, "/csv/inaugCorpus.csv"))
dat_dail <- readtext(paste0(path_data, "/tsv/dailsample.tsv"), text_field = "speech")
dat_udhr <- readtext(paste0(path_data, "/txt/UDHR/*"))
View(dat_udhr)
dat_eu <- readtext(paste0(path_data, "/txt/EU_manifestos/*.txt"),
docvarsfrom = "filenames",
docvarnames = c("unit", "context", "year", "language", "party"),
dvsep = "_",
encoding = "ISO-8859-1")
str(dat_eu)
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") %>%
dfm_subset(cmp_code %in% c("301", "110", "108"))
devtools::install_github("hadley/emo")
install.packages("emo")
install.packages("quanteda.textstats")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(quanteda)
# library(quanteda.textmodels)
# library(quanteda.textplots)
library(quanteda.textstats)
library(readtext)
# install.packages("manifestoR")
library(manifestoR)
mp_setapikey(key.file = "manifesto_apikey.txt")
uk_electoral_programmes <- mp_corpus(countryname == "United Kingdom")
uk_electoral_programmes
names(uk_electoral_programmes) #do we want to have that in the html as output?
manifesto_corpus <- uk_electoral_programmes %>%
as.data.frame(with.meta = TRUE) %>%
corpus(docid_field = "manifesto_id", unique_docnames = FALSE) %>%
#docvars(field = "cmp_code") %>%
corpus()
manifesto_corpus
manifesto_corpus %>%
docvars() %>%
names() #meta data information
manifesto_corpus %>%
docvars()  #meta data information
library(readr)
MPDataset_MPDS2021a <- read_csv("MPDataset_MPDS2021a.csv")
View(MPDataset_MPDS2021a)
MPDataset <- read_csv("MPDataset_MPDS2021a.csv")
MPD_uk_parties <- MPDataset %>%
subset(countryname == "United Kingdom") %>%
select(party, partyname)
View(MPD_uk_parties)
MPD_uk_parties <- MPDataset %>%
subset(countryname == "United Kingdom") %>%
select(party, partyname) %>%
distinct()
scotland_corpus <- manifesto_corpus %>%
corpus_subset(party == "51902")
tokenized_manifesto <- scotland_corpus %>%
tokens() %>%
tokens(remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_remove(stopwords("english")) %>%
tokens_remove(c("will")) %>% #remove will
tokens_wordstem()
tokenized_manifesto
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") %>%
dfm_subset(cmp_code %in% c("301", "110", "108"))
manifesto_dfm
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 10, group = cmp_code)
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "European Union: Negative", "Federalism"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
Quanteda also provides an effective method for reading text passages based on key words. `kwic()` ("keyword in context") allows to do it for a text string or pattern.
Specifically here we choose the keyword "brexit", and we select the 10 words around (before and after) that specific word.
scotland_corpus %>%
tokens() %>%
kwic(phrase("brexit"), window = 10) %>%
DT::datatable(caption = "Keywords in context", rownames = FALSE, options = list(scrollX = TRUE, pageLength = 5, lengthMenu = c(5, 10, 15, 20)))
brexit_tokens <- manifesto_corpus %>%
tokens() %>%
tokens_select("Brexit", selection = "keep", window = 20, padding = FALSE, verbose = TRUE)
brexit_tokens <- manifesto_corpus %>%
tokens() %>%
tokens_select("Brexit", selection = "keep", window = 20, padding = FALSE, verbose = TRUE)
brexit_sent <- brexit_tokens %>%
dfm() %>%
dfm_lookup(data_dictionary_LSD2015[1:2]) %>%
dfm_group(party)
print(brexit_sent)
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
#dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") %>%
dfm_subset(cmp_code %in% c("301", "110", "108"))
manifesto_dfm
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 10, group = cmp_code)
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "European Union: Negative", "Federalism"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
manifesto_dfm <- tokenized_manifesto %>%
dfm() %>%
dfm_subset(!(cmp_code %in% c("H", "", "0", "000", NA))) %>%
dfm_group(cmp_code) %>%
dfm_weight(scheme = "prop") %>%
dfm_subset(cmp_code %in% c("301", "110", "108"))
manifesto_dfm
feature_frequencies_cat <- manifesto_dfm %>% textstat_frequency(n = 10, group = cmp_code)
feature_frequencies_cat %>%
mutate(cmp_code = factor(group, labels = c("European Union: Positive", "European Union: Negative", "Federalism"))) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, fill = cmp_code)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "share of words per category") +
facet_wrap(~cmp_code, ncol = 2, scales = "free") +
coord_flip()
brexit_tokens <- manifesto_corpus %>%
tokens() %>%
tokens_select("Brexit", selection = "keep", window = 20, padding = FALSE, verbose = TRUE)
brexit_sent <- brexit_tokens %>%
dfm() %>%
dfm_lookup(data_dictionary_LSD2015[1:2]) %>%
dfm_group(party)
print(brexit_sent)
sent_df <- convert(brexit_sent, to = "data.frame")
sent_df$sent_score <- log((sent_df$positive + 0.5) / (sent_df$negative + 0.5))
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(partyname, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
View(sent_df)
sent_df <- brexit_sent %>%
convert(brexit_sent, to = "data.frame") %>%
rename(doc_id = party)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(doc_id = party)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
sent_df$sent_score <- log((sent_df$positive + 0.5) / (sent_df$negative + 0.5))
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(partyname, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(sent_df, MPD_uk_parties, by = "party")
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(MPD_uk_parties, sent_df, by = "party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
sent_df$sent_score <- log((sent_df$positive + 0.5) / (sent_df$negative + 0.5))
sent_df %>%
left_join(MPD_uk_parties, sent_df, by = "party") %>%
pivot_longer(c(positive, negative)) %>%
ggplot(aes(x = reorder(partyname, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
class(MPD_uk_parties$party)
class(sent_df$party)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id) %>%
as.numeric(party)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric(doc_id) %>%
rename(party = doc_id)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric("doc_id") %>%
rename(party = doc_id)
uk_electoral_programmes
brexit_tokens <- manifesto_corpus %>%
tokens() %>%
tokens_select("Brexit", selection = "keep", window = 20, padding = FALSE, verbose = TRUE)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.double("doc_id") %>%
rename(party = doc_id)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
cbind(sent_df, MPD_uk_parties$partyname) %>%
rename(party = doc_id)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
cbind(sent_df, MPD_uk_parties$partyname)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
left_join(MPD_uk_parties, sent_df, by = "party")
rm(sent_df)
sent_df <- brexit_sent %>%
convert(to = "data.frame")
View(sent_df)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id) %>%
left_join(MPD_uk_parties, sent_df, by = "party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id) %>%
left_join(MPD_uk_parties, MPD_uk_parties, by = "party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id) %>%
left_join(MPD_uk_parties, sent_df, by = "party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id) %>%
df <- left_join(MPD_uk_parties, sent_df, by = "party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
df <- left_join(MPD_uk_parties, sent_df, by = "party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id) %>%
as.double(party)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
as.double(party)
sent_df %>%
as.double(party)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
sent_df %>%
as.double(party)
sent_df %>%
as.double("party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id) %>%
as.numeric(unlist("party"))
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id) %>%
sent_df %>%
as.numeric(unlist("party"))
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
sent_df %>%
as.numeric(unlist("party"))
sent_df %>%
(as.numeric([["party"]]))
sent_df %>%
(as.numeric(["party"]))
sent_df %>%
(as.numeric("party"))
sent_df %>%
as.numeric("party")
class(sent_df$party)
sent_df %>%
as.character("party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
MPDataset %>%
as.character(party)
MPDataset %>%
as.character("party")
MPD_uk_parties %>%
as.character("party")
test<- left_join(MPD_uk_parties, sent_df, by = "party")
test<- left_join(sent_df, MPD_uk_parties, by = "party")
class(MPD_uk_parties$party)
class(sent_df$party)
rm(MPDataset_MPDS2021a)
rm(MPDataset)
MPD_uk_parties %>%
as.character("party")
class(MPD_uk_parties$party)
MPD_uk_parties %>%
as.character([party])
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
unlist(party) %>%
rename(party = doc_id)
library(tidyverse)
library(quanteda)
# library(quanteda.textmodels)
# library(quanteda.textplots)
library(quanteda.textstats)
library(readtext)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
unlist(party) %>%
rename(party = doc_id)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
unlist(doc_id) %>%
rename(party = doc_id)
# install.packages("manifestoR")
library(manifestoR)
mp_setapikey(key.file = "manifesto_apikey.txt")
uk_electoral_programmes <- mp_corpus(countryname == "United Kingdom")
manifesto_corpus <- uk_electoral_programmes %>%
as.data.frame(with.meta = TRUE) %>%
corpus(docid_field = "manifesto_id", unique_docnames = FALSE) %>%
corpus()
brexit_tokens <- manifesto_corpus %>%
tokens() %>%
tokens_select("Brexit", selection = "keep", window = 20, padding = FALSE, verbose = TRUE)
brexit_sent <- brexit_tokens %>%
dfm() %>%
dfm_lookup(data_dictionary_LSD2015[1:2]) %>%
dfm_group(party)
print(brexit_sent)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
unlist(doc_id) %>%
rename(party = doc_id)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
unlist("doc_id") %>%
rename(party = doc_id)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
unlist("doc_id") # %>%
sent_df <- brexit_sent %>%
convert(to = "data.frame") #%>%
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
MPD_uk_parties %>%
as.character(party)
library(readr)
MPDataset <- read_csv("MPDataset_MPDS2021a.csv")
MPD_uk_parties <- MPDataset %>%
subset(countryname == "United Kingdom") %>%
select(party, partyname) %>%
distinct()
MPD_uk_parties %>%
as.character(party)
MPD_uk_parties %>%
as.list("party")
test<- left_join(sent_df, MPD_uk_parties, by = "party")
MPD_uk_parties %>%
as.list(as.character("party"))
test<- left_join(sent_df, MPD_uk_parties, by = "party")
class(MPD_uk_parties$party)
MPD_uk_parties %>%
as.list(as.character["party"])
test<- left_join(sent_df, MPD_uk_parties, by = "party")
sent_df %>%
(as.numeric()["party"])
sent_df %>%
(as.numeric["party"])
sent_df %>%
(as.numeric[party])
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
cbind(MPD_uk_parties)
class(sent_df)
class(MPD_uk_parties)
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
list(MPD_uk_parties)
test<- left_join(sent_df, MPD_uk_parties, by = "party")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric([doc_id])
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric[doc_id]
sent_df <- brexit_sent %>%
convert(to = "data.frame")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric[doc_id]
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric["doc_id"]
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric[["doc_id"]]
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric("doc_id")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
as.numeric(unlist("doc_id"))
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
unlist(as.numeric("doc_id"))
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
unlist(as.numeric("doc_id")) %>%
rename(party = doc_id)
sent_df <- brexit_sent %>%
convert(to = "data.frame")
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(partyname, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment") +
theme()
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(partyname, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
sent_df %>%
pivot_longer(c(positive, negative)) %>%
#left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(partyname, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
sent_df %>%
pivot_longer(c(positive, negative)) %>%
#left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(doc_id, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
test<-
sent_df$sent_score <- log((sent_df$positive + 0.5) / (sent_df$negative + 0.5))
sent_df %>%
pivot_longer(c(positive, negative)) %>%
#left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(doc_id, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
sent_df <- brexit_sent %>%
convert(to = "data.frame") %>%
rename(party = doc_id)
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(party, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
sent_df$sent_score <- log((sent_df$positive + 0.5) / (sent_df$negative + 0.5))
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(party, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
sent_df %>%
pivot_longer(c(positive, negative)) %>%
left_join(sent_df, MPD_uk_parties, by = "party") %>%
ggplot(aes(x = reorder(party, sent_df$sent_score), y = sent_df$sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
sent_df %>%
pivot_longer(c(positive, negative)) %>%
ggplot(aes(x = reorder(party, sent_score), y = sent_score), fill =  as.factor(name)) +
geom_point(size = 3) +
coord_flip() +
labs(x = "Parties", y = "Estimated sentiment")
test <- left_join(sent_df, MPD_uk_parties, by = "party")
test <- left_join(MPD_uk_parties, sent_df, by = "party")
MPD_uk_parties<-  MPD_uk_parties %>%
as.character()
test <- left_join(MPD_uk_parties, sent_df, by = "party")
test <- left_join(sent_df, MPD_uk_parties, by = "party")
MPD_uk_parties<-  MPD_uk_parties %>%
as.character("party")
test <- left_join(sent_df, MPD_uk_parties, by = "party")
MPD_uk_parties<-  MPD_uk_parties %>%
as.list("party")
test <- left_join(sent_df, MPD_uk_parties, by = "party")
MPD_uk_parties<-  MPD_uk_parties %>%
as.list()
test <- left_join(sent_df, MPD_uk_parties, by = "party")
test <- left_join(sent_df, MPD_uk_parties, by = "party", copy` = TRUE )
sdkgjlsk
stop()
test <- left_join(sent_df, MPD_uk_parties, by = "party", copy = TRUE )
stop()
MPD_uk_parties<-  MPD_uk_parties %>%
as.character("party")
